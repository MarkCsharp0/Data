@model MVC.Models.PostModel

@{
    ViewBag.Title = "CreatePost";
}
    <style>
        .Img_Preview {
            max-height: 200px;
            max-width: 200px;
            border-radius: 5px;
        }

          .text {
            text-align: center;
        }
    </style>
<h2 class="text">CreateOrEditPost</h2>

<script>
    var imageIds = JSON.parse("@Json.Encode(Model.ImageIds)");
    var comments = JSON.parse("@Json.Encode(Model.Comments)");
  
    function UploadImage(elem) {
        var url_t = "@Url.Action("Get", "Image")/";
        if (elem.files.length != 1) {
            alert("Select Files");
            return;
        }
        var fd = new FormData();
        fd.append("file", elem.files[0]);
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Upload", "User")',
                    contentType: false,
                    processData: false,
                    data: fd,
                    success: function (res) {
                        imageIds.push(res.ImageId);
                        $("#PicturesDiv").append("<img src='@Url.Action("Get", "Image")/" + res.ImageId + "'  class='Img_Preview'  data-image-id='" + res.ImageId + "'/>")
                    },
                    error: function (xhr, status, p3) {
                        alert(xhr.responseText);
                    },
                    complete: function () {
                     //   $(".UploadLabel").html($(".UploadLabel").html());
                    }
                });
    }


    function SaveForm() {
        var post={
            "ImageIds": imageIds,
            "Comments": comments,
            "UserId": $("#UserId").val(),
            "UserName":$("#UserName").val(),
            "Description": $("#Description").val(),
            "Location": ymaps.geolocation.city,
            "Id": $("#Id").val()
        }
        console.log(post);
        $.post('@Url.Action("CreatePost")', post).done(function (res) {
            alert(res.Success)
        });
        //console.log(post);
        
    }
</script>

<div id="PicturesDiv" class="text">

    @if (Model.ImageIds is List<int> Images)
    {
        foreach (var imgId in Images)
        {
        <a href=@($"/user/testfilter/{imgId}") title="Open photo editor" id="Picture">
            <img src="@Url.Action("Get", "Image")/@imgId" class="Img_Preview" data-image-id="@imgId" />
        </a>
        }
        }
</div>

<div id="PictureUpload" class="UploadLabel">
    <label for="upload" class="text">
        <span class="glyphicon glyphicon-upload" aria-hidden="true"></span>
        <input type="file" name="AvatarImage" id="upload" onchange="UploadImage(this);" accept=".jpg,.png,.gif" style="display:none">
    </label>
</div>

<div class="form-horizontal PostForm ">
    
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.UserId)
    <dl>
        <dt>
            @Html.DisplayNameFor(model => model.UserName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Location)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Location)
        </dd>
    </dl>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Submit" onclick="SaveForm();" class="btn btn-default" />
        </div>
    </div>
</div>
